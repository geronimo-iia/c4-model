[tool.poetry]
name = "c4_model"
version = "0.0.0"
description = "C4 model utilities"
license = "MIT"
authors = ["Jerome Guibert <jguibert@gmail.com>"]
readme = "README.md"
homepage = "https://pypi.org/project/c4_model"
documentation = "https://geronimo-iia.github.io/c4-model/"
repository = "https://github.com/geronimo-iia/c4-model"
keywords = []
classifiers = [
    # update this list to match your application: https://pypi.org/pypi?%3Aaction=list_classifiers
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed"
]

[tool.poetry.dependencies]
python = "^3.8"


[tool.poetry.dev-dependencies]
black = "^20.8b1" # The uncompromising code formatter.
isort = "^5.6.4" #A Python utility / library to sort Python imports.
# https://flakehell.readthedocs.io/
flakehell = "^0.7.1"
# https://github.com/DmytroLitvinov/awesome-flake8-extensions
flake8-bugbear = "^20.11.1"
flake8-builtins = "^1.5.3"
flake8-comprehensions = "^3.3.1"
flake8-docstrings = "^1.5.0"
flake8-eradicate = "^1.0.0"
flake8-isort = "^4.0.0"
flake8-mutable = "^1.2.0"
flake8-pytest-style = "^1.3.0"
flake8-spellcheck = "^0.20.0"
pep8-naming = "^0.11.1"

mypy = "*"


# Unit Testing
pytest = "^6" # pytest: simple powerful testing with Python
pytest-cov = "^2" # Pytest plugin for measuring coverage.
pytest-mock = "^3"
coverage = {version = "^5", extras = ["toml"]} # Code coverage measurement for Python
xdoctest = "^0.15.0" # A rewrite of the builtin doctest module

# Documentation
sphinx = "^2.3.1"
sphinx_rtd_theme = "^0.4.3"
m2r = "^0.2.1"  # M2R converts a markdown file including reStructuredText (rst)
autodocsumm = "*"


[tool.black]
# see https://black.readthedocs.io/en/stable/
target-version = ["py38"]
skip-string-normalization = true
line_length = 120

[tool.isort]
# see https://timothycrosley.github.io/isort/
combine_as_imports = true
multi_line_output = 3
include_trailing_comma = true
use_parentheses = true
force_grid_wrap = 0
ensure_newline_before_comments = true
line_length = 120

[tool.coverage.paths]
source = ["c4_model"]

[tool.coverage.run]
# see https://coverage.readthedocs.io/en/coverage-5.0.3/config.html
branch = true
source = ["c4_model"]
omit = ["tests/*", ".venv/*", "*/__main__.py"]

[tool.coverage.report]
# see https://coverage.readthedocs.io/en/coverage-5.0.3/config.html
exclude_lines =[
    "pragma: no cover",
    "raise NotImplementedError"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--strict-markers --pdbcls=tests:Debugger -r sxX --cov=c4_model --cov-report=html --cov-report=term-missing:skip-covered"
cache_dir = ".cache"

[tool.flakehell]
exclude = ["README.md"]
format = "colored"
max_line_length = 120
show_source = true
max-complexity = 18
docstring-convention = "google"
#whitelist = "../../allowlist.txt"

[tool.flakehell.plugins]
#flake8-bandit = ["+*", "-S322"]
flake8-bugbear = ["+*"]
flake8-builtins = ["+*"]
flake8-comprehensions = ["+*"]
#flake8-darglint = ["+*", "-DAR201"]
# explicitly disable plugin
flake8-docstrings = ["+*", "-D107", "-D100"]
flake8-eradicate = ["+*"]
flake8-isort = ["+*"]
flake8-mutable = ["+*"]
flake8-pytest-style = ["+*"]
flake8-spellcheck = ["+*", "-SC200"]
mccabe = ["+*"]
pep8-naming = ["+*"]
pycodestyle = ["+*"]
pyflakes = ["+*", "-W503"]
pylint = ["+*"]


[build-system]
requires = ["poetry>=1.0.0"]
build-backend = "poetry.masonry.api"
